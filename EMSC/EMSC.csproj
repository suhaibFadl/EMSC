<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
	  <PackageReference Include="AutoMapper" Version="10.1.1" />
	  <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.1" />
	  <PackageReference Include="iTextSharp" Version="5.5.13.3" />
	  <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.0" />
	  <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.2.0" />
	  <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.0" />
	  <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.0" />
	  <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.8" />
	  <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.0" />
	  <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.0">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	  <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.0" />
	  <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.0" />
	  <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.0">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	  <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="5.0.1" />
	  <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.2.4">
	    <PrivateAssets>all</PrivateAssets>
	    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	  <PackageReference Include="System.Data.SqlClient" Version="4.8.2" />
	  <PackageReference Include="DinkToPdf" Version="1.0.8" />
	  <PackageReference Include="DinkToPdfCopyDependencies" Version="1.0.8" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\register\**" />
    <Content Remove="ClientApp\src\app\users\**" />
    <Content Remove="wwwroot\NewFolder\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\register\**" />
    <None Remove="ClientApp\src\app\users\**" />
    <None Remove="wwwroot\NewFolder\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\src\app\register\**" />
    <Compile Remove="ClientApp\src\app\users\**" />
    <Compile Remove="wwwroot\NewFolder\**" />
    <EmbeddedResource Remove="ClientApp\src\app\register\**" />
    <EmbeddedResource Remove="ClientApp\src\app\users\**" />
    <EmbeddedResource Remove="wwwroot\NewFolder\**" />
    <TypeScriptCompile Remove="ClientApp\src\app\register\**" />
    <TypeScriptCompile Remove="ClientApp\src\app\users\**" />
    <TypeScriptCompile Remove="wwwroot\NewFolder\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\dutch-paginator-intl.ts" />
    <None Remove="ClientApp\src\app\interfaces\mail.ts~RF433a7409.TMP" />
    <None Remove="ClientApp\src\app\menu.ts" />
    <None Remove="ClientApp\src\app\search.pipe.ts" />
    <None Remove="ClientApp\src\app\_helper\jwt.interceptor.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\app\branches\" />
    <Folder Include="ClientApp\src\app\countries\" />
    <Folder Include="ClientApp\src\app\follow-up-committee\" />
    <Folder Include="ClientApp\src\app\hospitals\" />
    <Folder Include="ClientApp\src\app\management\" />
    <Folder Include="ClientApp\src\app\management\main-entry\" />
    <Folder Include="ClientApp\src\app\management\manage-users\" />
    <Folder Include="Data\" />
    <Folder Include="Resources\Files\" />
    <Folder Include="wwwroot\file\" />
    <Folder Include="wwwroot\PDFCreator\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <!--<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" /> -->
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build  --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
